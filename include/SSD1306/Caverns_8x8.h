/***********
This is based on the "Caverns of Zeux" font in
Megazeux, an old DOS game that simulated graphics
by modifying the DOS character set.  The original
game used an 8x14 character set, which has been
adapted to an 8x8 font by Ben Williams.

Most typeable keyboard symbols (letters, numbers,
punctuation, and special characters on the number
bar) are from an IBM PC BIOS 8x8 font.

This is an extended ASCII font, with 256 characters.

Megazeus has been released under an open source
license and ported to many platforms.  It can be found
here:
https://www.digitalmzx.com/

The full Megazeux 8x14 font can be found in the assets
directory of this Github repository, in the form of a
screenshot of part of the game.

The full IBM PS BIOS 8x8 font (and a Unicode extension
for it) can be found here:
https://int10h.org/oldschool-pc-fonts/fontlist/font?ibm_bios
***********/




// Caverns of Zeux font
SSD1306_CTiles caverns_font = {
	.w = 8,
	.h_pages = 1,
	.len = 256,
	.data = {
		// ASCII 0x00, NUL
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x01, SOH (Black Smiley)
		0b01111110,
		0b10000001,
		0b10010101,
		0b10100001,
		0b10100001,
		0b10100101,
		0b10000001,
		0b01111110,

		// ASCII 0x02, STX (White Smiley)
		0b01111110,
		0b11111111,
		0b11101001,
		0b11011111,
		0b11011111,
		0b11011001,
		0b11111111,
		0b01111110,

		// ASCII 0x03, ETX (Life Heart)
		0b00001110,
		0b00011111,
		0b00111111,
		0b01111110,
		0b00111101,
		0b00011111,
		0b00001110,
		0b00000000,

		// ASCII 0x04, EOT (Gem)
		0b00001000,
		0b00011100,
		0b00111010,
		0b01111101,
		0b00101110,
		0b00011100,
		0b00001000,
		0b00000000,

		// ASCII 0x05, ENQ (Club Suit)
		0b00000000,
		0b00011000,
		0b10011110,
		0b11100111,
		0b11100111,
		0b10011110,
		0b00011000,
		0b00000000,

		// ASCII 0x06, ACK (Spade Suit)
		0b00011000,
		0b00111100,
		0b10111110,
		0b11111111,
		0b11111111,
		0b10111110,
		0b00111100,
		0b00011000,

		// ASCII 0x07, BEL (Bullet Point)
		0b00000000,
		0b00000000,
		0b00110000,
		0b01111000,
		0b01111000,
		0b00110000,
		0b00000000,
		0b00000000,

		// ASCII 0x08, BS  (Invert Bullet Point)
		0b11111111,
		0b11111111,
		0b11100111,
		0b11000011,
		0b11000011,
		0b11100111,
		0b11111111,
		0b11111111,

		// ASCII 0x09, TAB/HT (Ring)
		0b00000000,
		0b00111000,
		0b01111100,
		0b01000100,
		0b01000100,
		0b01111100,
		0b00111000,
		0b00000000,

		// ASCII 0x0A, LF  (Keyhole)
		0b11111111,
		0b11111111,
		0b11111111,
		0b10100001,
		0b10001001,
		0b11111111,
		0b11111111,
		0b11111111,

		// ASCII 0x0B, VT  (Bomb)
		0b00000000,
		0b01110000,
		0b11101000,
		0b11111100,
		0b11111110,
		0b11111001,
		0b01110001,
		0b00000010,

		// ASCII 0x0C, NP/FF  (Key)
		0b00000000,
		0b00000000,
		0b00000110,
		0b11111001,
		0b10101001,
		0b00000110,
		0b00000000,
		0b00000000,

		// ASCII 0x0D, CR  (16th Note)
		0b11000000,
		0b11100000,
		0b11111111,
		0b01111111,
		0b00000101,
		0b00000101,
		0b00000111,
		0b00000111,

		// ASCII 0x0E, SO  (Double 16th Note)
		0b11000000,
		0b11111111,
		0b01111111,
		0b00000101,
		0b00000101,
		0b01100101,
		0b01111111,
		0b00111111,

		// ASCII 0x0F, SI  (Sun)
		0b10011001,
		0b01011010,
		0b00111100,
		0b11100111,
		0b11100111,
		0b00111100,
		0b01011010,
		0b10011001,

		// ASCII 0x10, DLE (Right-Pointing Pointer)
		0b01111111,
		0b00111110,
		0b00111110,
		0b00011100,
		0b00011100,
		0b00001000,
		0b00001000,
		0b00000000,

		// ASCII 0x11, DC1 (Left-Pointing Pointer)
		0b00001000,
		0b00001000,
		0b00011100,
		0b00011100,
		0b00111110,
		0b00111110,
		0b01111111,
		0b00000000,

		// ASCII 0x12, DC2 (Up Down Arrow)
		0b00000000,
		0b00100100,
		0b01100110,
		0b11111111,
		0b11111111,
		0b01100110,
		0b00100100,
		0b00000000,

		// ASCII 0x13, DC3 (Left Side Roman II)
		0b00000000,
		0b00000000,
		0b10000100,
		0b11000110,
		0b01000010,
		0b01111110,
		0b01111110,
		0b01000010,

		// ASCII 0x14, DC4 (Right Side Roman II)
		0b01000010,
		0b01111110,
		0b01111110,
		0b01000010,
		0b01100011,
		0b00100001,
		0b00000000,
		0b00000000,

		// ASCII 0x15, NAK (Serpent)
		0b01100000,
		0b11011010,
		0b11111111,
		0b11111101,
		0b10111111,
		0b01011011,
		0b00000010,
		0b00000000,

		// ASCII 0x16, SYN (Gate)
		0b01110000,
		0b01010000,
		0b01010000,
		0b01110000,
		0b01110000,
		0b01010000,
		0b01010000,
		0b01110000,

		// ASCII 0x17, ETB (Mouse)
		0b01100000,
		0b01010000,
		0b01110000,
		0b01110000,
		0b01110000,
		0b01100110,
		0b01001001,
		0b00110000,

		// ASCII 0x18, CAN (Upwards Arrow)
		0b00000000,
		0b00000100,
		0b00000110,
		0b01111111,
		0b01111111,
		0b00000110,
		0b00000100,
		0b00000000,

		// ASCII 0x19, EM (Downwards Arrow)
		0b00000000,
		0b00010000,
		0b00110000,
		0b01111111,
		0b01111111,
		0b00110000,
		0b00010000,
		0b00000000,

		// ASCII 0x1A, EOF (Rightwards Arrow)
		0b00001000,
		0b00001000,
		0b00001000,
		0b00101010,
		0b00111110,
		0b00011100,
		0b00001000,
		0b00000000,

		// ASCII 0x1B, ESC (Leftwards Arrow)
		0b00001000,
		0b00011100,
		0b00111110,
		0b00101010,
		0b00001000,
		0b00001000,
		0b00001000,
		0b00000000,

		// ASCII 0x1C, FS (Grave Stone)
		0b11111000,
		0b11111110,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111110,
		0b11111000,

		// ASCII 0x1D, GS (Left Right Arrow)
		0b00001000,
		0b00011100,
		0b00111110,
		0b00001000,
		0b00001000,
		0b00111110,
		0b00011100,
		0b00001000,

		// ASCII 0x1E, RS (Up-Pointing Triangle)
		0b11000000,
		0b11110000,
		0b11111100,
		0b11111110,
		0b11111110,
		0b11111100,
		0b11110000,
		0b11000000,

		// ASCII 0x1F, US (Down-Pointing Triangle)
		0b00000011,
		0b00001111,
		0b00111111,
		0b01111111,
		0b01111111,
		0b00111111,
		0b00001111,
		0b00000011,

		// ASCII 0x20,   (Space)
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x21, !
		0b00000000,
		0b00000000,
		0b00000110,
		0b01011111,
		0b01011111,
		0b00000110,
		0b00000000,
		0b00000000,

		// ASCII 0x22, "
		0b00000000,
		0b00000111,
		0b00000111,
		0b00000000,
		0b00000111,
		0b00000111,
		0b00000000,
		0b00000000,

		// ASCII 0x23, #
		0b00010100,
		0b01111111,
		0b01111111,
		0b00010100,
		0b01111111,
		0b01111111,
		0b00010100,
		0b00000000,

		// ASCII 0x24, $
		0b00100100,
		0b00101110,
		0b01101011,
		0b01101011,
		0b00111010,
		0b00010010,
		0b00000000,
		0b00000000,

		// ASCII 0x25, %
		0b01000110,
		0b01100110,
		0b00110000,
		0b00011000,
		0b00001100,
		0b01100110,
		0b01100010,
		0b00000000,

		// ASCII 0x26, &
		0b00110000,
		0b01111010,
		0b01001111,
		0b01011101,
		0b00110111,
		0b01111010,
		0b01001000,
		0b00000000,

		// ASCII 0x27, '
		0b00000100,
		0b00000111,
		0b00000011,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x28, (
		0b00000000,
		0b00011100,
		0b00111110,
		0b01100011,
		0b01000001,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x29, )
		0b00000000,
		0b01000001,
		0b01100011,
		0b00111110,
		0b00011100,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x2A, *
		0b00000000,
		0b00101010,
		0b00111110,
		0b00011100,
		0b00011100,
		0b00111110,
		0b00101010,
		0b00000000,

		// ASCII 0x2B, +
		0b00001000,
		0b00001000,
		0b00111110,
		0b00111110,
		0b00001000,
		0b00001000,
		0b00000000,
		0b00000000,

		// ASCII 0x2C, ,
		0b00000000,
		0b10000000,
		0b11100000,
		0b01100000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x2D, -
		0b00001000,
		0b00001000,
		0b00001000,
		0b00001000,
		0b00001000,
		0b00001000,
		0b00000000,
		0b00000000,

		// ASCII 0x2E, .
		0b00000000,
		0b00000000,
		0b01100000,
		0b01100000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x2F, /
		0b01100000,
		0b00110000,
		0b00011000,
		0b00001100,
		0b00000110,
		0b00000011,
		0b00000001,
		0b00000000,

		// ASCII 0x30, 0
		0b00111110,
		0b01111111,
		0b01110001,
		0b01011001,
		0b01001101,
		0b01111111,
		0b00111110,
		0b00000000,

		// ASCII 0x31, 1
		0b01000000,
		0b01000010,
		0b01111111,
		0b01111111,
		0b01000000,
		0b01000000,
		0b00000000,
		0b00000000,

		// ASCII 0x32, 2
		0b01100010,
		0b01110011,
		0b01011001,
		0b01001001,
		0b01101111,
		0b01100110,
		0b00000000,
		0b00000000,

		// ASCII 0x33, 3
		0b00100010,
		0b01100011,
		0b01001001,
		0b01001001,
		0b01111111,
		0b00110110,
		0b00000000,
		0b00000000,

		// ASCII 0x34, 4
		0b00011000,
		0b00011100,
		0b00010110,
		0b01010011,
		0b01111111,
		0b01111111,
		0b01010000,
		0b00000000,

		// ASCII 0x35, 5
		0b00100111,
		0b01100111,
		0b01000101,
		0b01000101,
		0b01111101,
		0b00111001,
		0b00000000,
		0b00000000,

		// ASCII 0x36, 6
		0b00111100,
		0b01111110,
		0b01001011,
		0b01001001,
		0b01111001,
		0b00110000,
		0b00000000,
		0b00000000,

		// ASCII 0x37, 7
		0b00000011,
		0b00000011,
		0b01110001,
		0b01111001,
		0b00001111,
		0b00000111,
		0b00000000,
		0b00000000,

		// ASCII 0x38, 8
		0b00110110,
		0b01111111,
		0b01001001,
		0b01001001,
		0b01111111,
		0b00110110,
		0b00000000,
		0b00000000,

		// ASCII 0x39, 9
		0b00000110,
		0b01001111,
		0b01001001,
		0b01101001,
		0b00111111,
		0b00011110,
		0b00000000,
		0b00000000,

		// ASCII 0x3A, :
		0b00000000,
		0b00000000,
		0b01100110,
		0b01100110,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x3B, ;
		0b00000000,
		0b01000000,
		0b01110110,
		0b00110110,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x3C, <
		0b00001000,
		0b00011100,
		0b00110110,
		0b01100011,
		0b01000001,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x3D, =
		0b00100100,
		0b00100100,
		0b00100100,
		0b00100100,
		0b00100100,
		0b00100100,
		0b00000000,
		0b00000000,

		// ASCII 0x3E, >
		0b00000000,
		0b01000001,
		0b01100011,
		0b00110110,
		0b00011100,
		0b00001000,
		0b00000000,
		0b00000000,

		// ASCII 0x3F, ?
		0b00000010,
		0b00000011,
		0b01010001,
		0b01011001,
		0b00001111,
		0b00000110,
		0b00000000,
		0b00000000,

		// ASCII 0x40, @ (Candle in Niche)
		0b00111100,
		0b01111110,
		0b11000011,
		0b10111001,
		0b10111101,
		0b11000011,
		0b01111110,
		0b00111100,

		// ASCII 0x41, A
		0b01111100,
		0b01111110,
		0b00010011,
		0b00010011,
		0b01111110,
		0b01111100,
		0b00000000,
		0b00000000,

		// ASCII 0x42, B
		0b01000001,
		0b01111111,
		0b01111111,
		0b01001001,
		0b01001001,
		0b01111111,
		0b00110110,
		0b00000000,

		// ASCII 0x43, C
		0b00011100,
		0b00111110,
		0b01100011,
		0b01000001,
		0b01000001,
		0b01100011,
		0b00100010,
		0b00000000,

		// ASCII 0x44, D
		0b01000001,
		0b01111111,
		0b01111111,
		0b01000001,
		0b01100011,
		0b00111110,
		0b00011100,
		0b00000000,

		// ASCII 0x45, E
		0b01000001,
		0b01111111,
		0b01111111,
		0b01001001,
		0b01011101,
		0b01000001,
		0b01100011,
		0b00000000,

		// ASCII 0x46, F
		0b01000001,
		0b01111111,
		0b01111111,
		0b01001001,
		0b00011101,
		0b00000001,
		0b00000011,
		0b00000000,

		// ASCII 0x47, G
		0b00011100,
		0b00111110,
		0b01100011,
		0b01000001,
		0b01010001,
		0b01110011,
		0b01110010,
		0b00000000,

		// ASCII 0x48, H
		0b01111111,
		0b01111111,
		0b00001000,
		0b00001000,
		0b01111111,
		0b01111111,
		0b00000000,
		0b00000000,

		// ASCII 0x49, I
		0b00000000,
		0b01000001,
		0b01111111,
		0b01111111,
		0b01000001,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x4A, J
		0b00110000,
		0b01110000,
		0b01000000,
		0b01000001,
		0b01111111,
		0b00111111,
		0b00000001,
		0b00000000,

		// ASCII 0x4B, K
		0b01000001,
		0b01111111,
		0b01111111,
		0b00001000,
		0b00011100,
		0b01110111,
		0b01100011,
		0b00000000,

		// ASCII 0x4C, L
		0b01000001,
		0b01111111,
		0b01111111,
		0b01000000,
		0b01000000,
		0b01100000,
		0b01110000,
		0b00000000,

		// ASCII 0x4D, M
		0b01111111,
		0b01111111,
		0b00001110,
		0b00011100,
		0b00001110,
		0b01111111,
		0b01111111,
		0b00000000,

		// ASCII 0x4E, N
		0b01111111,
		0b01111111,
		0b00000110,
		0b00001100,
		0b00011000,
		0b01111111,
		0b01111111,
		0b00000000,

		// ASCII 0x4F, O
		0b00011100,
		0b00111110,
		0b01100011,
		0b01000001,
		0b01100011,
		0b00111110,
		0b00011100,
		0b00000000,

		// ASCII 0x50, P
		0b01000001,
		0b01111111,
		0b01111111,
		0b01001001,
		0b00001001,
		0b00001111,
		0b00000110,
		0b00000000,

		// ASCII 0x51, Q
		0b00011110,
		0b00111111,
		0b00100001,
		0b01110001,
		0b01111111,
		0b01011110,
		0b00000000,
		0b00000000,

		// ASCII 0x52, R
		0b01000001,
		0b01111111,
		0b01111111,
		0b00001001,
		0b00011001,
		0b01111111,
		0b01100110,
		0b00000000,

		// ASCII 0x53, S
		0b00100110,
		0b01101111,
		0b01001101,
		0b01011001,
		0b01110011,
		0b00110010,
		0b00000000,
		0b00000000,

		// ASCII 0x54, T
		0b00000011,
		0b01000001,
		0b01111111,
		0b01111111,
		0b01000001,
		0b00000011,
		0b00000000,
		0b00000000,

		// ASCII 0x55, U
		0b01111111,
		0b01111111,
		0b01000000,
		0b01000000,
		0b01111111,
		0b01111111,
		0b00000000,
		0b00000000,

		// ASCII 0x56, V
		0b00011111,
		0b00111111,
		0b01100000,
		0b01100000,
		0b00111111,
		0b00011111,
		0b00000000,
		0b00000000,

		// ASCII 0x57, W
		0b01111111,
		0b01111111,
		0b00110000,
		0b00011000,
		0b00110000,
		0b01111111,
		0b01111111,
		0b00000000,

		// ASCII 0x58, X
		0b01000011,
		0b01100111,
		0b00111100,
		0b00011000,
		0b00111100,
		0b01100111,
		0b01000011,
		0b00000000,

		// ASCII 0x59, Y
		0b00000111,
		0b01001111,
		0b01111000,
		0b01111000,
		0b01001111,
		0b00000111,
		0b00000000,
		0b00000000,

		// ASCII 0x5A, Z
		0b01000111,
		0b01100011,
		0b01110001,
		0b01011001,
		0b01001101,
		0b01100111,
		0b01110011,
		0b00000000,

		// ASCII 0x5B, [
		0b00000000,
		0b01111111,
		0b01111111,
		0b01000001,
		0b01000001,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x5C, "\"
		0b00000001,
		0b00000011,
		0b00000110,
		0b00001100,
		0b00011000,
		0b00110000,
		0b01100000,
		0b00000000,

		// ASCII 0x5D, ]
		0b00000000,
		0b01000001,
		0b01000001,
		0b01111111,
		0b01111111,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x5E, ^ (Shark Fin)
		0b00010000,
		0b00011100,
		0b00001111,
		0b00000110,
		0b00001100,
		0b00011000,
		0b00010000,
		0b00000000,

		// ASCII 0x5F, _
		0b01000000,
		0b01000000,
		0b01000000,
		0b01000000,
		0b01000000,
		0b01000000,
		0b01000000,
		0b01000000,

		// ASCII 0x60, `
		0b00000000,
		0b00001100,
		0b00001110,
		0b00000011,
		0b00000001,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x61, a
		0b00100000,
		0b01110100,
		0b01010100,
		0b01010100,
		0b00111100,
		0b01111000,
		0b01000000,
		0b00000000,

		// ASCII 0x62, b
		0b01000001,
		0b01111111,
		0b00111111,
		0b01001000,
		0b01001000,
		0b01111000,
		0b00110000,
		0b00000000,

		// ASCII 0x63, c
		0b00111000,
		0b01111100,
		0b01000100,
		0b01000100,
		0b01101100,
		0b00101000,
		0b00000000,
		0b00000000,

		// ASCII 0x64, d
		0b00110000,
		0b01111000,
		0b01001000,
		0b01001001,
		0b00111111,
		0b01111111,
		0b01000000,
		0b00000000,

		// ASCII 0x65, e
		0b00111000,
		0b01111100,
		0b01010100,
		0b01010100,
		0b01011100,
		0b00011000,
		0b00000000,
		0b00000000,

		// ASCII 0x66, f
		0b01001000,
		0b01111110,
		0b01111111,
		0b01001001,
		0b00000011,
		0b00000010,
		0b00000000,
		0b00000000,

		// ASCII 0x67, g
		0b10011000,
		0b10111100,
		0b10100100,
		0b10100100,
		0b11111000,
		0b01111100,
		0b00000100,
		0b00000000,

		// ASCII 0x68, h
		0b01000001,
		0b01111111,
		0b01111111,
		0b00001000,
		0b00000100,
		0b01111100,
		0b01111000,
		0b00000000,

		// ASCII 0x69, i
		0b00000000,
		0b01000100,
		0b01111101,
		0b01111101,
		0b01000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x6A, j
		0b01100000,
		0b11100000,
		0b10000000,
		0b10000000,
		0b11111101,
		0b01111101,
		0b00000000,
		0b00000000,

		// ASCII 0x6B, k
		0b01000001,
		0b01111111,
		0b01111111,
		0b00010000,
		0b00111000,
		0b01101100,
		0b01000100,
		0b00000000,

		// ASCII 0x6C, l
		0b00000000,
		0b01000001,
		0b01111111,
		0b01111111,
		0b01000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x6D, m
		0b01111100,
		0b01111100,
		0b00011000,
		0b00111000,
		0b00011100,
		0b01111100,
		0b01111000,
		0b00000000,

		// ASCII 0x6E, n
		0b01111100,
		0b01111100,
		0b00000100,
		0b00000100,
		0b01111100,
		0b01111000,
		0b00000000,
		0b00000000,

		// ASCII 0x6F, o
		0b00111000,
		0b01111100,
		0b01000100,
		0b01000100,
		0b01111100,
		0b00111000,
		0b00000000,
		0b00000000,

		// ASCII 0x70, p
		0b10000100,
		0b11111100,
		0b11111000,
		0b10100100,
		0b00100100,
		0b00111100,
		0b00011000,
		0b00000000,

		// ASCII 0x71, q
		0b00011000,
		0b00111100,
		0b00100100,
		0b10100100,
		0b11111000,
		0b11111100,
		0b10000100,
		0b00000000,

		// ASCII 0x72, r
		0b01000100,
		0b01111100,
		0b01111000,
		0b01001100,
		0b00000100,
		0b00011100,
		0b00011000,
		0b00000000,

		// ASCII 0x73, s
		0b01001000,
		0b01011100,
		0b01010100,
		0b01010100,
		0b01110100,
		0b00100100,
		0b00000000,
		0b00000000,

		// ASCII 0x74, t
		0b00000000,
		0b00000100,
		0b00111110,
		0b01111111,
		0b01000100,
		0b00100100,
		0b00000000,
		0b00000000,

		// ASCII 0x75, u
		0b00111100,
		0b01111100,
		0b01000000,
		0b01000000,
		0b00111100,
		0b01111100,
		0b01000000,
		0b00000000,

		// ASCII 0x76, v
		0b00011100,
		0b00111100,
		0b01100000,
		0b01100000,
		0b00111100,
		0b00011100,
		0b00000000,
		0b00000000,

		// ASCII 0x77, w
		0b00111100,
		0b01111100,
		0b01110000,
		0b00111000,
		0b01110000,
		0b01111100,
		0b00111100,
		0b00000000,

		// ASCII 0x78, x
		0b01000100,
		0b01101100,
		0b00111000,
		0b00010000,
		0b00111000,
		0b01101100,
		0b01000100,
		0b00000000,

		// ASCII 0x79, y
		0b10011100,
		0b10111100,
		0b10100000,
		0b10100000,
		0b11111100,
		0b01111100,
		0b00000000,
		0b00000000,

		// ASCII 0x7A, z
		0b01001100,
		0b01100100,
		0b01110100,
		0b01011100,
		0b01001100,
		0b01100100,
		0b00000000,
		0b00000000,

		// ASCII 0x7B, {
		0b00001000,
		0b00001000,
		0b00111110,
		0b01110111,
		0b01000001,
		0b01000001,
		0b00000000,
		0b00000000,

		// ASCII 0x7C, |
		0b00000000,
		0b00000000,
		0b00000000,
		0b01110111,
		0b01110111,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x7D, }
		0b01000001,
		0b01000001,
		0b01110111,
		0b00111110,
		0b00001000,
		0b00001000,
		0b00000000,
		0b00000000,

		// ASCII 0x7E, ~ (Caret)
		0b00001000,
		0b00001100,
		0b00000110,
		0b00000011,
		0b00000110,
		0b00001100,
		0b00001000,
		0b00000000,

		// ASCII 0x7F (Vertical Lines)
		0b11111111,
		0b00000000,
		0b11111111,
		0b11111111,
		0b00000000,
		0b00000000,
		0b11111111,
		0b00000000,

		// ASCII 0x80, (Small !)
		0b00000000,
		0b00000000,
		0b00001100,
		0b01011110,
		0b01011110,
		0b00001100,
		0b00000000,
		0b00000000,

		// ASCII 0x81, (Copyright)
		0b00111100,
		0b01000010,
		0b10011001,
		0b10100101,
		0b10100101,
		0b10000001,
		0b01000010,
		0b00111100,

		// ASCII 0x82, (Empty!)
		// This was the other half of
		// copyright, but in 8x8, it
		// doesn't makes sense to have
		// it in two halves.
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x83, (Diagonal Wall Part)
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b00111111,
		0b00001111,
		0b00000011,

		// ASCII 0x84, (Ammo)
		0b00000000,
		0b00001110,
		0b00000000,
		0b00001110,
		0b00001110,
		0b00001110,
		0b00001110,
		0b00000100,

		// ASCII 0x85, (Bottom Right Diagonal Wall)
		0b10000000,
		0b11000000,
		0b11100000,
		0b11110000,
		0b11111000,
		0b11111100,
		0b11111110,
		0b11111111,

		// ASCII 0x86, (Bottom Left Diagonal Wall)
		0b11111111,
		0b11111110,
		0b11111100,
		0b11111000,
		0b11110000,
		0b11100000,
		0b11000000,
		0b10000000,

		// ASCII 0x87, (Top Right Diagonal Wall)
		0b00000001,
		0b00000011,
		0b00000111,
		0b00001111,
		0b00011111,
		0b00111111,
		0b01111111,
		0b11111111,

		// ASCII 0x88, (Top Left Diagonal Wall)
		0b11111111,
		0b01111111,
		0b00111111,
		0b00011111,
		0b00001111,
		0b00000111,
		0b00000011,
		0b00000001,

		// ASCII 0x89, (TM Left Half)
		0b00000000,
		0b00000001,
		0b00011111,
		0b00011111,
		0b00000001,
		0b00000000,
		0b00011111,
		0b00011110,

		// ASCII 0x8A, (TM Right Half)
		0b00000100,
		0b00011110,
		0b00011111,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0x8B, (Left Wall with Missing Chunk)
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11110111,
		0b11100111,
		0b11000111,
		0b10000111,

		// ASCII 0x8C, (Right Wall with Missing Chunk)
		0b00000111,
		0b00000111,
		0b00000111,
		0b00000111,
		0b00001111,
		0b00011111,
		0b00111111,
		0b01111111,

		// ASCII 0x8D, (Left Top Round)
		0b10000000,
		0b11000000,
		0b11100000,
		0b11100000,
		0b11110000,
		0b11110000,
		0b11110000,
		0b11110000,

		// ASCII 0x8E, (Ammos)
		0b00000000,
		0b01110111,
		0b00000000,
		0b01110111,
		0b01110111,
		0b01110111,
		0b01110111,
		0b00100010,

		// ASCII 0x8F, (Water Blast Up)
		0b01011100,
		0b10111100,
		0b01010110,
		0b00011110,
		0b00101110,
		0b10111100,
		0b01010100,
		0b10101000,

		// ASCII 0x90, (Water Blast Down)
		0b00010101,
		0b00101010,
		0b00111101,
		0b01110100,
		0b01111000,
		0b01101010,
		0b00111101,
		0b00111010,

		// ASCII 0x91, (Water Blast Right)
		0b10100010,
		0b01000101,
		0b10110010,
		0b01101111,
		0b10111011,
		0b01111111,
		0b00011100,
		0b00000000,

		// ASCII 0x92, (Water Blast Left)
		0b00000000,
		0b00111000,
		0b11111110,
		0b11011101,
		0b11110110,
		0b01001101,
		0b10100010,
		0b01000101,

		// ASCII 0x93, (Book)
		0b00011110,
		0b00000010,
		0b01111010,
		0b01111010,
		0b01111100,
		0b01111000,
		0b00000000,
		0b00000000,

		// ASCII 0x94, (Baby Bear)
		0b00000000,
		0b01111011,
		0b11101111,
		0b10111100,
		0b10111100,
		0b11101111,
		0b01111011,
		0b00000000,

		// ASCII 0x95, (Rough Vertial Lines Wall)
		0b00000000,
		0b11111111,
		0b00000000,
		0b00000000,
		0b11111111,
		0b00000000,
		0b11111111,
		0b01010101,

		// ASCII 0x96, (Cross Projectile)
		0b00000000,
		0b00010000,
		0b00010000,
		0b00111100,
		0b01111000,
		0b00010000,
		0b00010000,
		0b00000000,

		// ASCII 0x97, (Diagonal Cross Projectile)
		0b11000011,
		0b01100110,
		0b00110100,
		0b00011000,
		0b00011000,
		0b00101100,
		0b01100110,
		0b11000011,

		// ASCII 0x98, (Startburst)
		0b00001000,
		0b00101010,
		0b00011100,
		0b00111111,
		0b01111110,
		0b00011100,
		0b00101010,
		0b00001000,

		// ASCII 0x99, (Bear)
		0b01110011,
		0b11111011,
		0b10101100,
		0b10011100,
		0b10011100,
		0b10101100,
		0b11111011,
		0b01110011,

		// ASCII 0x9A, (Whirlpool F0)
		0b01101100,
		0b11111001,
		0b11110100,
		0b01111010,
		0b00000101,
		0b00001010,
		0b00100001,
		0b10000100,

		// ASCII 0x9B, (Whirlpool F1)
		0b01001010,
		0b00010100,
		0b10101001,
		0b11010100,
		0b01110000,
		0b11110010,
		0b11110000,
		0b01100001,

		// ASCII 0x9C, (Whirlpool F2)
		0b00100001,
		0b10000100,
		0b01010000,
		0b10100000,
		0b01011110,
		0b00101111,
		0b10011111,
		0b00110110,

		// ASCII 0x9D, (Whirlpool F3)
		0b10000110,
		0b00001111,
		0b01001111,
		0b00001110,
		0b00101011,
		0b10010101,
		0b00101000,
		0b01010010,

		// ASCII 0x9E, (Low Ball)
		0b00000000,
		0b00000000,
		0b00000000,
		0b00110000,
		0b01111000,
		0b01111000,
		0b00110000,
		0b00000000,

		// ASCII 0x9F, (Mouse Hole)
		0b00000000,
		0b00000000,
		0b11000000,
		0b11100000,
		0b11100000,
		0b11000000,
		0b00000000,
		0b00000000,

		// ASCII 0xA0, (Right Half Long Circle)
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b01111110,
		0b01111110,
		0b00011000,

		// ASCII 0xA1, (Left Half Long Circle)
		0b00111000,
		0b01111110,
		0b01111110,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,

		// ASCII 0xA2, (Slash Thingy?)
		0b00011000,
		0b00111100,
		0b01111000,
		0b01110000,
		0b11100000,
		0b11000000,
		0b10000000,
		0b00000000,

		// ASCII 0xA3, (Top Right Bevel)
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111110,
		0b11111110,
		0b11111000,

		// ASCII 0xA4, (Bottom Left Bevel)
		0b00011111,
		0b01111111,
		0b01111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,

		// ASCII 0xA5, (Top Left Bevel)
		0b11111000,
		0b11111110,
		0b11111110,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,

		// ASCII 0xA6, (Bottom Right Bevel)
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b01111111,
		0b01111111,
		0b00011111,

		// ASCII 0xA7, (Active Mine)
		0b01100110,
		0b11011011,
		0b10111101,
		0b01100110,
		0b01101110,
		0b10111101,
		0b11011011,
		0b01100110,

		// ASCII 0xA8, (Reflective Bottom Left Diagonal)
		0b11111101,
		0b11111010,
		0b11101100,
		0b11111000,
		0b11110000,
		0b11100000,
		0b11000000,
		0b10000000,

		// ASCII 0xA9, (Reflective Top Left Diagonal)
		0b11111111,
		0b01111111,
		0b00111111,
		0b00011011,
		0b00001111,
		0b00000101,
		0b00000010,
		0b00000001,

		// ASCII 0xAA, (Slight Top Right Bevel)
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111110,
		0b11111000,

		// ASCII 0xAB, (Reflective Solid Block)
		0b11111111,
		0b10111111,
		0b11111111,
		0b10111111,
		0b10111111,
		0b10111111,
		0b10111111,
		0b11111111,

		// ASCII 0xAC, (Reflective Bottom Right Bevel)
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b10111111,
		0b01111111,
		0b01100101,
		0b00011111,

		// ASCII 0xAD, (Potion)
		0b00000000,
		0b00000000,
		0b01101000,
		0b11111011,
		0b11111011,
		0b01101000,
		0b00000000,
		0b00000000,

		// ASCII 0xAE, (Reflective Top Left Bevel)
		0b11111000,
		0b10100110,
		0b11111110,
		0b11111101,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,

		// ASCII 0xAF, (X Cross)
		0b00000000,
		0b01000010,
		0b00100100,
		0b00011000,
		0b00011000,
		0b00100100,
		0b01000010,
		0b00000000,

		// ASCII 0xB0, (25% Light Block)
		0b00000000,
		0b10101010,
		0b00000000,
		0b01010101,
		0b00000000,
		0b10101010,
		0b00000000,
		0b01010101,

		// ASCII 0xB1, (50% Light Block)
		0b10101010,
		0b01010101,
		0b10101010,
		0b01010101,
		0b10101010,
		0b01010101,
		0b10101010,
		0b01010101,

		// ASCII 0xB2, (75% Light Block)
		0b11111111,
		0b01010101,
		0b11111111,
		0b10101010,
		0b11111111,
		0b01010101,
		0b11111111,
		0b10101010,

		// ASCII 0xB3, (V Bar Single)
		0b00000000,
		0b00000000,
		0b00000000,
		0b11111111,
		0b11111111,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xB4, (Left T Single)
		0b00001000,
		0b00001000,
		0b00001000,
		0b11111111,
		0b11111111,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xB5, (Invert Low Bar)
		0b11001111,
		0b11001111,
		0b11001111,
		0b11001111,
		0b11001111,
		0b11001111,
		0b11001111,
		0b11001111,

		// ASCII 0xB6, (Invert Thick High Bar)
		0b11110001,
		0b11110001,
		0b11110001,
		0b11110001,
		0b11110001,
		0b11110001,
		0b11110001,
		0b11110001,

		// ASCII 0xB7, (Amulet)
		0b00000000,
		0b00110000,
		0b01111000,
		0b01111000,
		0b00110110,
		0b00001001,
		0b00000101,
		0b00000010,

		// ASCII 0xB8, (Guy)
		0b10011000,
		0b11101000,
		0b11111010,
		0b00011111,
		0b01111011,
		0b11001000,
		0b10010000,
		0b00000000,

		// ASCII 0xB9, (Left T Double)
		0b00010100,
		0b00010100,
		0b11110111,
		0b11110111,
		0b00000000,
		0b11111111,
		0b11111111,
		0b00000000,

		// ASCII 0xBA, (V Bar Double)
		0b00000000,
		0b00000000,
		0b11111111,
		0b11111111,
		0b00000000,
		0b11111111,
		0b11111111,
		0b00000000,

		// ASCII 0xBB, (Left Bottom Double)
		0b00010100,
		0b00010100,
		0b11110100,
		0b11110100,
		0b00000100,
		0b11111100,
		0b11111100,
		0b00000000,

		// ASCII 0xBC, (Left Top Double)
		0b00010100,
		0b00010100,
		0b00010111,
		0b00010111,
		0b00010000,
		0b00011111,
		0b00011111,
		0b00000000,

		// ASCII 0xBD, (High Ball)
		0b00000000,
		0b00000000,
		0b00001100,
		0b00011110,
		0b00011110,
		0b00001100,
		0b00000000,
		0b00000000,

		// ASCII 0xBE, (Magic Staff)
		0b00000000,
		0b00000000,
		0b11000000,
		0b00111011,
		0b00000011,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xBF, (Left Bottom Single)
		0b00001000,
		0b00001000,
		0b00001000,
		0b11111000,
		0b11111000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xC0, (Right Top Single)
		0b00000000,
		0b00000000,
		0b00000000,
		0b00001111,
		0b00001111,
		0b00001000,
		0b00001000,
		0b00001000,

		// ASCII 0xC1, (Top T Single)
		0b00001000,
		0b00001000,
		0b00001000,
		0b00001111,
		0b00001111,
		0b00001000,
		0b00001000,
		0b00001000,

		// ASCII 0xC2, (Bottom T Single)
		0b00001000,
		0b00001000,
		0b00001000,
		0b11111000,
		0b11111000,
		0b00001000,
		0b00001000,
		0b00001000,

		// ASCII 0xC3, (Right T Single)
		0b00000000,
		0b00000000,
		0b00000000,
		0b11111111,
		0b11111111,
		0b00001000,
		0b00001000,
		0b00001000,

		// ASCII 0xC4, (H Bar Single)
		0b00001000,
		0b00001000,
		0b00001000,
		0b00001000,
		0b00001000,
		0b00001000,
		0b00001000,
		0b00001000,

		// ASCII 0xC5, (Cross Single)
		0b00001000,
		0b00001000,
		0b00001000,
		0b11111111,
		0b11111111,
		0b00001000,
		0b00001000,
		0b00001000,

		// ASCII 0xC6, (??)
		0b00001110,
		0b00011110,
		0b00111100,
		0b11111100,
		0b11111100,
		0b00111100,
		0b00011110,
		0b00001110,

		// ASCII 0xC7, (??)
		0b00001111,
		0b00001011,
		0b00001111,
		0b00001101,
		0b00001111,
		0b00001011,
		0b00001111,
		0b00001101,

		// ASCII 0xC8, (Right Top Double)
		0b00000000,
		0b00000000,
		0b00011111,
		0b00011111,
		0b00010000,
		0b00010111,
		0b00010111,
		0b00010100,

		// ASCII 0xC9, (Right Bottom Double)
		0b00000000,
		0b00000000,
		0b11111100,
		0b11111100,
		0b00000100,
		0b11110100,
		0b11110100,
		0b00010100,

		// ASCII 0xCA, (Top T Double)
		0b00010100,
		0b00010100,
		0b00010111,
		0b00010111,
		0b00010000,
		0b00010111,
		0b00010111,
		0b00010100,

		// ASCII 0xCB, (Bottom T Double)
		0b00010100,
		0b00010100,
		0b11110100,
		0b11110100,
		0b00000100,
		0b11110100,
		0b11110100,
		0b00010100,

		// ASCII 0xCC, (Right T Double)
		0b00000000,
		0b00000000,
		0b11111111,
		0b11111111,
		0b00000000,
		0b11110111,
		0b11110111,
		0b00010100,

		// ASCII 0xCD, (H Bar Double)
		0b00010100,
		0b00010100,
		0b00010100,
		0b00010100,
		0b00010100,
		0b00010100,
		0b00010100,
		0b00010100,

		// ASCII 0xCE, (Cross Double)
		0b00010100,
		0b00010100,
		0b11110111,
		0b11111111,
		0b00010100,
		0b11111111,
		0b11110111,
		0b00010100,

		// ASCII 0xCF, (??)
		0b00000000,
		0b00000000,
		0b10000000,
		0b01000000,
		0b01110000,
		0b00111110,
		0b00001110,
		0b00000000,

		// ASCII 0xD0, (??)
		0b00000000,
		0b00000000,
		0b11100000,
		0b11111000,
		0b00011100,
		0b00000110,
		0b00000010,
		0b00000001,

		// ASCII 0xD1, (Top Left Steep Ramp)
		0b11111111,
		0b00111111,
		0b00001111,
		0b00000011,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xD2, (Top Right Steep Ramp)
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000011,
		0b00001111,
		0b00111111,
		0b11111111,

		// ASCII 0xD3, (Bottom Left Steep Ramp)
		0b11111111,
		0b11111100,
		0b11110000,
		0b11000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xD4, (Bottom Right Steep Ramp)
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b11000000,
		0b11110000,
		0b11111100,
		0b11111111,

		// ASCII 0xD5, (Bottom Left Shallow Ramp)
		0b11110000,
		0b11110000,
		0b11100000,
		0b11100000,
		0b11000000,
		0b11000000,
		0b10000000,
		0b10000000,

		// ASCII 0xD6, (Bottom Right Shallow Ramp)
		0b10000000,
		0b10000000,
		0b11000000,
		0b11000000,
		0b11100000,
		0b11100000,
		0b11110000,
		0b11110000,

		// ASCII 0xD7, (Top Left Shallow Ramp)
		0b00001111,
		0b00001111,
		0b00000111,
		0b00000111,
		0b00000011,
		0b00000011,
		0b00000001,
		0b00000001,

		// ASCII 0xD8, (Top Right Shallow Ramp)
		0b00000001,
		0b00000001,
		0b00000011,
		0b00000011,
		0b00000111,
		0b00000111,
		0b00001111,
		0b00001111,

		// ASCII 0xD9, (Left Top Single)
		0b00001000,
		0b00001000,
		0b00001000,
		0b00001111,
		0b00001111,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xDA, (Right Bottom Single)
		0b00000000,
		0b00000000,
		0b00000000,
		0b11111000,
		0b11111000,
		0b00001000,
		0b00001000,
		0b00001000,

		// ASCII 0xDB, (Solid Block)
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,

		// ASCII 0xDC, (Bottom Half Block)
		0b11110000,
		0b11110000,
		0b11110000,
		0b11110000,
		0b11110000,
		0b11110000,
		0b11110000,
		0b11110000,

		// ASCII 0xDD, (Left Half Block)
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xDE, (Right Half Block)
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b11111111,
		0b11111111,
		0b11111111,
		0b11111111,

		// ASCII 0xDF, (Top Half Block)
		0b00001111,
		0b00001111,
		0b00001111,
		0b00001111,
		0b00001111,
		0b00001111,
		0b00001111,
		0b00001111,

		// ASCII 0xE0, (Fish)
		0b00101100,
		0b01111010,
		0b01111010,
		0b01111110,
		0b01111110,
		0b00111100,
		0b01100110,
		0b01000010,

		// ASCII 0xE1, (Bottom Half 50% Light)
		0b01010000,
		0b10100000,
		0b01010000,
		0b10100000,
		0b01010000,
		0b10100000,
		0b01010000,
		0b10100000,

		// ASCII 0xE2, (Tree)
		0b00000000,
		0b00001010,
		0b10001111,
		0b11111110,
		0b11111111,
		0b10001111,
		0b00001111,
		0b00000101,

		// ASCII 0xE3, (Demon)
		0b01110000,
		0b00011000,
		0b11111110,
		0b11111011,
		0b00101110,
		0b11111011,
		0b11111110,
		0b00000000,

		// ASCII 0xE4, (Bottom Half 75% Light)
		0b10100000,
		0b11110000,
		0b01010000,
		0b11110000,
		0b10100000,
		0b11110000,
		0b01010000,
		0b11110000,

		// ASCII 0xE5, (Pouch)
		0b00000000,
		0b00110001,
		0b01111011,
		0b01111111,
		0b01111011,
		0b00110001,
		0b00000000,
		0b00000000,

		// ASCII 0xE6, (Big Demon)
		0b11110000,
		0b11011000,
		0b00011100,
		0b11111110,
		0b11010011,
		0b00110110,
		0b11010011,
		0b11111110,

		// ASCII 0xE7, (??)
		0b00001110,
		0b00111110,
		0b01110000,
		0b01000000,
		0b10000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xE8, (Open Scroll)
		0b00000001,
		0b00110011,
		0b01011101,
		0b01010111,
		0b01111101,
		0b01010101,
		0b01101110,
		0b01000000,

		// ASCII 0xE9, (Boulder)
		0b00111100,
		0b01101110,
		0b11111101,
		0b11111111,
		0b10111111,
		0b11111011,
		0b01011110,
		0b00111100,

		// ASCII 0xEA, (Ghost)
		0b00000000,
		0b01111110,
		0b11110011,
		0b01011111,
		0b11110011,
		0b01111111,
		0b11111110,
		0b00000000,

		// ASCII 0xEB, (Snake)
		0b01101000,
		0b11010000,
		0b10000110,
		0b10001111,
		0b10011011,
		0b11110110,
		0b01101010,
		0b00000000,

		// ASCII 0xEC, (Flaming Eye)
		0b00101000,
		0b01010110,
		0b10101001,
		0b10101010,
		0b11011010,
		0b11011001,
		0b01110110,
		0b00101000,

		// ASCII 0xED, (Blob)
		0b00011000,
		0b01111110,
		0b01110010,
		0b11111111,
		0b11111111,
		0b01110010,
		0b01111110,
		0b00011000,

		// ASCII 0xEE, (Cave Doorway)
		0b10100000,
		0b11111010,
		0b11111110,
		0b11111110,
		0b11111111,
		0b11111100,
		0b11111110,
		0b01001000,

		// ASCII 0xEF, (Chest)
		0b11101100,
		0b11111110,
		0b11101110,
		0b11111110,
		0b11101110,
		0b11111110,
		0b11101100,
		0b00000000,

		// ASCII 0xF0, (Hole)
		0b00010100,
		0b00111100,
		0b01111110,
		0b01111111,
		0b11111110,
		0b01111111,
		0b11111100,
		0b00101100,

		// ASCII 0xF1, (??)
		0b10101010,
		0b01010101,
		0b10101010,
		0b01010101,
		0b00101010,
		0b00010101,
		0b00001010,
		0b00000101,

		// ASCII 0xF2, (??)
		0b10100000,
		0b01010000,
		0b10101000,
		0b01010100,
		0b10101010,
		0b01010101,
		0b10101010,
		0b01010101,

		// ASCII 0xF3, (??)
		0b00001010,
		0b00000101,
		0b00000010,
		0b00000001,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xF4, (Empty Gem Holder)
		0b00000000,
		0b00010000,
		0b10100000,
		0b11000000,
		0b11000000,
		0b10100000,
		0b00010000,
		0b00000000,

		// ASCII 0xF5, (Gem Holder w/Gem)
		0b00000000,
		0b00010100,
		0b10101110,
		0b11011101,
		0b11011111,
		0b10101110,
		0b00010100,
		0b00000000,

		// ASCII 0xF6, (Rough Stone Wall)
		0b10101010,
		0b01000101,
		0b11101000,
		0b10110101,
		0b00011010,
		0b10110100,
		0b01100010,
		0b10010101,

		// ASCII 0xF7, (Marble Wall)
		0b11101110,
		0b10111111,
		0b11111011,
		0b11011111,
		0b11111111,
		0b01111101,
		0b11101111,
		0b11111111,

		// ASCII 0xF8, (Mine)
		0b00000000,
		0b00011000,
		0b00111100,
		0b01100110,
		0b01101110,
		0b00111100,
		0b00011000,
		0b00000000,

		// ASCII 0xF9, (Center Big Dot)
		0b00000000,
		0b00000000,
		0b00000000,
		0b00011000,
		0b00011000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xFA, (Center Dot)
		0b00000000,
		0b00000000,
		0b00000000,
		0b00010000,
		0b00010000,
		0b00000000,
		0b00000000,
		0b00000000,

		// ASCII 0xFB, (Hot Air Balloon)
		0b00000000,
		0b00001110,
		0b01011101,
		0b10111111,
		0b10101111,
		0b01011111,
		0b00001110,
		0b00000000,

		// ASCII 0xFC, (Brick Wall)
		0b11110111,
		0b11110000,
		0b11110111,
		0b11110111,
		0b11110111,
		0b00000111,
		0b11110111,
		0b11110111,

		// ASCII 0xFD, (Door)
		0b01001000,
		0b11111100,
		0b11111110,
		0b11111110,
		0b11111110,
		0b11011110,
		0b11111100,
		0b00000000,

		// ASCII 0xFE, (Tile Block)
		0b00000000,
		0b01111110,
		0b01100010,
		0b01111010,
		0b01111110,
		0b01111110,
		0b01111110,
		0b00000000,

		// ASCII 0xFF, (Empty!)
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
		0b00000000,
	}
};
